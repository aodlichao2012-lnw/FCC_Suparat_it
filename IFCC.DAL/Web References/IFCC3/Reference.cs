//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace IFCC.DAL.IFCC3 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="iFCC_WSSoap", Namespace="http://tempuri.org/")]
    public partial class iFCC_WS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback authenApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkLoginStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendSMS_By_ServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMail_By_ServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendLineNotifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAnnouncementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFlightStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFlightStatusOnDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkvalidURLOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public iFCC_WS() {
            this.Url = global::IFCC.DAL.Properties.Settings.Default.IFCC_DAL_IFCC3_iFCC_WS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event authenApplicationCompletedEventHandler authenApplicationCompleted;
        
        /// <remarks/>
        public event getAddressCompletedEventHandler getAddressCompleted;
        
        /// <remarks/>
        public event checkLoginStatusCompletedEventHandler checkLoginStatusCompleted;
        
        /// <remarks/>
        public event sendSMS_By_ServiceCompletedEventHandler sendSMS_By_ServiceCompleted;
        
        /// <remarks/>
        public event sendMail_By_ServiceCompletedEventHandler sendMail_By_ServiceCompleted;
        
        /// <remarks/>
        public event sendMailCompletedEventHandler sendMailCompleted;
        
        /// <remarks/>
        public event sendLineNotifyCompletedEventHandler sendLineNotifyCompleted;
        
        /// <remarks/>
        public event getAnnouncementCompletedEventHandler getAnnouncementCompleted;
        
        /// <remarks/>
        public event GetFlightStatusCompletedEventHandler GetFlightStatusCompleted;
        
        /// <remarks/>
        public event GetFlightStatusOnDateCompletedEventHandler GetFlightStatusOnDateCompleted;
        
        /// <remarks/>
        public event getURLCompletedEventHandler getURLCompleted;
        
        /// <remarks/>
        public event checkvalidURLCompletedEventHandler checkvalidURLCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/authenApplication", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool authenApplication(string projectID, string username, string password) {
            object[] results = this.Invoke("authenApplication", new object[] {
                        projectID,
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void authenApplicationAsync(string projectID, string username, string password) {
            this.authenApplicationAsync(projectID, username, password, null);
        }
        
        /// <remarks/>
        public void authenApplicationAsync(string projectID, string username, string password, object userState) {
            if ((this.authenApplicationOperationCompleted == null)) {
                this.authenApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthenApplicationOperationCompleted);
            }
            this.InvokeAsync("authenApplication", new object[] {
                        projectID,
                        username,
                        password}, this.authenApplicationOperationCompleted, userState);
        }
        
        private void OnauthenApplicationOperationCompleted(object arg) {
            if ((this.authenApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authenApplicationCompleted(this, new authenApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAddress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getAddress(string prmType, string prmProvince, string prmAmpher, string prmTumbon) {
            object[] results = this.Invoke("getAddress", new object[] {
                        prmType,
                        prmProvince,
                        prmAmpher,
                        prmTumbon});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getAddressAsync(string prmType, string prmProvince, string prmAmpher, string prmTumbon) {
            this.getAddressAsync(prmType, prmProvince, prmAmpher, prmTumbon, null);
        }
        
        /// <remarks/>
        public void getAddressAsync(string prmType, string prmProvince, string prmAmpher, string prmTumbon, object userState) {
            if ((this.getAddressOperationCompleted == null)) {
                this.getAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAddressOperationCompleted);
            }
            this.InvokeAsync("getAddress", new object[] {
                        prmType,
                        prmProvince,
                        prmAmpher,
                        prmTumbon}, this.getAddressOperationCompleted, userState);
        }
        
        private void OngetAddressOperationCompleted(object arg) {
            if ((this.getAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAddressCompleted(this, new getAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkLoginStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkLoginStatus(string hid) {
            object[] results = this.Invoke("checkLoginStatus", new object[] {
                        hid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkLoginStatusAsync(string hid) {
            this.checkLoginStatusAsync(hid, null);
        }
        
        /// <remarks/>
        public void checkLoginStatusAsync(string hid, object userState) {
            if ((this.checkLoginStatusOperationCompleted == null)) {
                this.checkLoginStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckLoginStatusOperationCompleted);
            }
            this.InvokeAsync("checkLoginStatus", new object[] {
                        hid}, this.checkLoginStatusOperationCompleted, userState);
        }
        
        private void OncheckLoginStatusOperationCompleted(object arg) {
            if ((this.checkLoginStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkLoginStatusCompleted(this, new checkLoginStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendSMS_By_Service", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool sendSMS_By_Service(string project_id, string service_type_id, string mobile) {
            object[] results = this.Invoke("sendSMS_By_Service", new object[] {
                        project_id,
                        service_type_id,
                        mobile});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void sendSMS_By_ServiceAsync(string project_id, string service_type_id, string mobile) {
            this.sendSMS_By_ServiceAsync(project_id, service_type_id, mobile, null);
        }
        
        /// <remarks/>
        public void sendSMS_By_ServiceAsync(string project_id, string service_type_id, string mobile, object userState) {
            if ((this.sendSMS_By_ServiceOperationCompleted == null)) {
                this.sendSMS_By_ServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendSMS_By_ServiceOperationCompleted);
            }
            this.InvokeAsync("sendSMS_By_Service", new object[] {
                        project_id,
                        service_type_id,
                        mobile}, this.sendSMS_By_ServiceOperationCompleted, userState);
        }
        
        private void OnsendSMS_By_ServiceOperationCompleted(object arg) {
            if ((this.sendSMS_By_ServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendSMS_By_ServiceCompleted(this, new sendSMS_By_ServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendMail_By_Service", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendMail_By_Service(string project_id, string service_type, string send_to, string send_to_cc, string subject, string body) {
            object[] results = this.Invoke("sendMail_By_Service", new object[] {
                        project_id,
                        service_type,
                        send_to,
                        send_to_cc,
                        subject,
                        body});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendMail_By_ServiceAsync(string project_id, string service_type, string send_to, string send_to_cc, string subject, string body) {
            this.sendMail_By_ServiceAsync(project_id, service_type, send_to, send_to_cc, subject, body, null);
        }
        
        /// <remarks/>
        public void sendMail_By_ServiceAsync(string project_id, string service_type, string send_to, string send_to_cc, string subject, string body, object userState) {
            if ((this.sendMail_By_ServiceOperationCompleted == null)) {
                this.sendMail_By_ServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMail_By_ServiceOperationCompleted);
            }
            this.InvokeAsync("sendMail_By_Service", new object[] {
                        project_id,
                        service_type,
                        send_to,
                        send_to_cc,
                        subject,
                        body}, this.sendMail_By_ServiceOperationCompleted, userState);
        }
        
        private void OnsendMail_By_ServiceOperationCompleted(object arg) {
            if ((this.sendMail_By_ServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMail_By_ServiceCompleted(this, new sendMail_By_ServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendMail(string project_id, string service_type, string send_to, string subject, string body) {
            object[] results = this.Invoke("sendMail", new object[] {
                        project_id,
                        service_type,
                        send_to,
                        subject,
                        body});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendMailAsync(string project_id, string service_type, string send_to, string subject, string body) {
            this.sendMailAsync(project_id, service_type, send_to, subject, body, null);
        }
        
        /// <remarks/>
        public void sendMailAsync(string project_id, string service_type, string send_to, string subject, string body, object userState) {
            if ((this.sendMailOperationCompleted == null)) {
                this.sendMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMailOperationCompleted);
            }
            this.InvokeAsync("sendMail", new object[] {
                        project_id,
                        service_type,
                        send_to,
                        subject,
                        body}, this.sendMailOperationCompleted, userState);
        }
        
        private void OnsendMailOperationCompleted(object arg) {
            if ((this.sendMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMailCompleted(this, new sendMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendLineNotify", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendLineNotify(string project_name, string message) {
            object[] results = this.Invoke("sendLineNotify", new object[] {
                        project_name,
                        message});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendLineNotifyAsync(string project_name, string message) {
            this.sendLineNotifyAsync(project_name, message, null);
        }
        
        /// <remarks/>
        public void sendLineNotifyAsync(string project_name, string message, object userState) {
            if ((this.sendLineNotifyOperationCompleted == null)) {
                this.sendLineNotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendLineNotifyOperationCompleted);
            }
            this.InvokeAsync("sendLineNotify", new object[] {
                        project_name,
                        message}, this.sendLineNotifyOperationCompleted, userState);
        }
        
        private void OnsendLineNotifyOperationCompleted(object arg) {
            if ((this.sendLineNotifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendLineNotifyCompleted(this, new sendLineNotifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAnnouncement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAnnouncement(string project_id, string condition_type, string condition_value) {
            object[] results = this.Invoke("getAnnouncement", new object[] {
                        project_id,
                        condition_type,
                        condition_value});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAnnouncementAsync(string project_id, string condition_type, string condition_value) {
            this.getAnnouncementAsync(project_id, condition_type, condition_value, null);
        }
        
        /// <remarks/>
        public void getAnnouncementAsync(string project_id, string condition_type, string condition_value, object userState) {
            if ((this.getAnnouncementOperationCompleted == null)) {
                this.getAnnouncementOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAnnouncementOperationCompleted);
            }
            this.InvokeAsync("getAnnouncement", new object[] {
                        project_id,
                        condition_type,
                        condition_value}, this.getAnnouncementOperationCompleted, userState);
        }
        
        private void OngetAnnouncementOperationCompleted(object arg) {
            if ((this.getAnnouncementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAnnouncementCompleted(this, new getAnnouncementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFlightStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFlightStatus(string flightid) {
            object[] results = this.Invoke("GetFlightStatus", new object[] {
                        flightid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFlightStatusAsync(string flightid) {
            this.GetFlightStatusAsync(flightid, null);
        }
        
        /// <remarks/>
        public void GetFlightStatusAsync(string flightid, object userState) {
            if ((this.GetFlightStatusOperationCompleted == null)) {
                this.GetFlightStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFlightStatusOperationCompleted);
            }
            this.InvokeAsync("GetFlightStatus", new object[] {
                        flightid}, this.GetFlightStatusOperationCompleted, userState);
        }
        
        private void OnGetFlightStatusOperationCompleted(object arg) {
            if ((this.GetFlightStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFlightStatusCompleted(this, new GetFlightStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFlightStatusOnDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFlightStatusOnDate(string Airline, string FligthNumber, string Date) {
            object[] results = this.Invoke("GetFlightStatusOnDate", new object[] {
                        Airline,
                        FligthNumber,
                        Date});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFlightStatusOnDateAsync(string Airline, string FligthNumber, string Date) {
            this.GetFlightStatusOnDateAsync(Airline, FligthNumber, Date, null);
        }
        
        /// <remarks/>
        public void GetFlightStatusOnDateAsync(string Airline, string FligthNumber, string Date, object userState) {
            if ((this.GetFlightStatusOnDateOperationCompleted == null)) {
                this.GetFlightStatusOnDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFlightStatusOnDateOperationCompleted);
            }
            this.InvokeAsync("GetFlightStatusOnDate", new object[] {
                        Airline,
                        FligthNumber,
                        Date}, this.GetFlightStatusOnDateOperationCompleted, userState);
        }
        
        private void OnGetFlightStatusOnDateOperationCompleted(object arg) {
            if ((this.GetFlightStatusOnDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFlightStatusOnDateCompleted(this, new GetFlightStatusOnDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getURL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getURL() {
            object[] results = this.Invoke("getURL", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getURLAsync() {
            this.getURLAsync(null);
        }
        
        /// <remarks/>
        public void getURLAsync(object userState) {
            if ((this.getURLOperationCompleted == null)) {
                this.getURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetURLOperationCompleted);
            }
            this.InvokeAsync("getURL", new object[0], this.getURLOperationCompleted, userState);
        }
        
        private void OngetURLOperationCompleted(object arg) {
            if ((this.getURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getURLCompleted(this, new getURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkvalidURL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkvalidURL(string strHash) {
            object[] results = this.Invoke("checkvalidURL", new object[] {
                        strHash});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkvalidURLAsync(string strHash) {
            this.checkvalidURLAsync(strHash, null);
        }
        
        /// <remarks/>
        public void checkvalidURLAsync(string strHash, object userState) {
            if ((this.checkvalidURLOperationCompleted == null)) {
                this.checkvalidURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckvalidURLOperationCompleted);
            }
            this.InvokeAsync("checkvalidURL", new object[] {
                        strHash}, this.checkvalidURLOperationCompleted, userState);
        }
        
        private void OncheckvalidURLOperationCompleted(object arg) {
            if ((this.checkvalidURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkvalidURLCompleted(this, new checkvalidURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void authenApplicationCompletedEventHandler(object sender, authenApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authenApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal authenApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getAddressCompletedEventHandler(object sender, getAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void checkLoginStatusCompletedEventHandler(object sender, checkLoginStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkLoginStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkLoginStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void sendSMS_By_ServiceCompletedEventHandler(object sender, sendSMS_By_ServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendSMS_By_ServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendSMS_By_ServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void sendMail_By_ServiceCompletedEventHandler(object sender, sendMail_By_ServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMail_By_ServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMail_By_ServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void sendMailCompletedEventHandler(object sender, sendMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void sendLineNotifyCompletedEventHandler(object sender, sendLineNotifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendLineNotifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendLineNotifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getAnnouncementCompletedEventHandler(object sender, getAnnouncementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAnnouncementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAnnouncementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetFlightStatusCompletedEventHandler(object sender, GetFlightStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFlightStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFlightStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetFlightStatusOnDateCompletedEventHandler(object sender, GetFlightStatusOnDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFlightStatusOnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFlightStatusOnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getURLCompletedEventHandler(object sender, getURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void checkvalidURLCompletedEventHandler(object sender, checkvalidURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkvalidURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkvalidURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591